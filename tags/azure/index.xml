<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>azure on Data Foo</title>
    <link>https://abhirockzz.github.io/tags/azure/</link>
    <description>Recent content in azure on Data Foo</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Â© Abhishek Gupta, 2021</copyright>
    <lastBuildDate>Tue, 02 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://abhirockzz.github.io/tags/azure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Autoscaling Redis applications on Kubernetes ðŸš€ðŸš€</title>
      <link>https://abhirockzz.github.io/posts/autoscale-redis-apps-kubernetes/</link>
      <pubDate>Tue, 02 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://abhirockzz.github.io/posts/autoscale-redis-apps-kubernetes/</guid>
      <description>This blog post demonstrates how to auto-scale your Redis based applications on Kubernetes. Redis is a widely used (and loved!) database which supports a rich set of data structures (String, Hash, Streams, Geospatial), as well as other features such as pub/sub messaging, clustering (HA) etc.</description>
    </item>
    
    <item>
      <title>An easy to use monitoring solution for Redis</title>
      <link>https://abhirockzz.github.io/posts/redis-grafana/</link>
      <pubDate>Fri, 12 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://abhirockzz.github.io/posts/redis-grafana/</guid>
      <description>Recently, I discovered a nice way of plugging in monitoring for Redis using Grafana, thanks to this great Data Source plugin that works with any Redis database, including Azure Cache for Redis!</description>
    </item>
    
    <item>
      <title>Getting started with Rust and Redis</title>
      <link>https://abhirockzz.github.io/posts/rust-redis-getting-started/</link>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://abhirockzz.github.io/posts/rust-redis-getting-started/</guid>
      <description>Are you learning Rust and looking for ways to get some hands-on practice with concrete examples? A good approach might be to try and integrate Rust with external systems.</description>
    </item>
    
    <item>
      <title>Build a pipeline to join streams of real time data</title>
      <link>https://abhirockzz.github.io/posts/azure-stream-analytics-tutorial/</link>
      <pubDate>Fri, 28 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://abhirockzz.github.io/posts/azure-stream-analytics-tutorial/</guid>
      <description>With traditional architectures, it&amp;rsquo;s quite hard to counter challenges imposed by real-time streaming data â€“ one such use case is joining streams of data from disparate sources.</description>
    </item>
    
    <item>
      <title>PostgreSQL pgoutput plugin for change data capture</title>
      <link>https://abhirockzz.github.io/posts/postgres-debezium-pgoutput/</link>
      <pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://abhirockzz.github.io/posts/postgres-debezium-pgoutput/</guid>
      <description>Set up a Change Data Capture architecture on Azure using Debezium, Postgres and Kafka was a tutorial on how to use Debezium for change data capture from Azure PostgreSQL and send them to Azure Event Hubs for Kafka - it used the wal2json output plugin.</description>
    </item>
    
    <item>
      <title>How to use Azure Go SDK to manage Azure Data Explorer clusters</title>
      <link>https://abhirockzz.github.io/posts/golang-azure-data-explorer-manage/</link>
      <pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://abhirockzz.github.io/posts/golang-azure-data-explorer-manage/</guid>
      <description>Getting started with Azure Data Explorer using the Go SDK covered how to use the Azure Data Explorer Go SDK to ingest and query data from azure data explorer to ingest and query data.</description>
    </item>
    
    <item>
      <title>Tutorial: Getting started with Azure Data Explorer using the Go SDK</title>
      <link>https://abhirockzz.github.io/posts/golang-azure-data-explorer-getting-started/</link>
      <pubDate>Wed, 22 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://abhirockzz.github.io/posts/golang-azure-data-explorer-getting-started/</guid>
      <description>With the help of an example, this blog post will walk you through how to use the Azure Data explorer Go SDK to ingest data from a Azure Blob storage container and query it programmatically using the SDK.</description>
    </item>
    
    <item>
      <title>Change Data Capture architecture using Debezium, Postgres and Kafka</title>
      <link>https://abhirockzz.github.io/posts/postgres-kafka-debezium-azure-cdc/</link>
      <pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://abhirockzz.github.io/posts/postgres-kafka-debezium-azure-cdc/</guid>
      <description>Change Data Capture (CDC) is a technique used to track row-level changes in database tables in response to create, update and delete operations.</description>
    </item>
    
    <item>
      <title>Azure Event Hubs &#39;Role Based Access Control&#39; in action</title>
      <link>https://abhirockzz.github.io/posts/eventhubs-rbac/</link>
      <pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://abhirockzz.github.io/posts/eventhubs-rbac/</guid>
      <description>Azure Event Hubs is streaming platform and event ingestion service that can receive and process millions of events per second. In this blog, we are going to cover one of the security aspects related to Azure Event Hubs.</description>
    </item>
    
    <item>
      <title>Tip: Using the latest TLS version with Azure Cache for Redis</title>
      <link>https://abhirockzz.github.io/posts/azure-redis-tls-tip/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://abhirockzz.github.io/posts/azure-redis-tls-tip/</guid>
      <description>Azure Cache for Redis provides an in-memory data store based on the open-source software Redis.
As a part of the industry-wide push toward the exclusive use of Transport Layer Security (TLS) version 1.</description>
    </item>
    
  </channel>
</rss>
