<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>azure cosmos db on Data Foo</title>
    <link>https://abhirockzz.github.io/tags/azure-cosmos-db/</link>
    <description>Recent content in azure cosmos db on Data Foo</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>© Abhishek Gupta, 2021</copyright>
    <lastBuildDate>Wed, 24 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://abhirockzz.github.io/tags/azure-cosmos-db/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure Cosmos DB: Use Cases and Trade-Offs</title>
      <link>https://abhirockzz.github.io/posts/azure-cosmosdb-use-cases-tradeoffs/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://abhirockzz.github.io/posts/azure-cosmosdb-use-cases-tradeoffs/</guid>
      <description>Azure Cosmos DB is a fully managed, elastically scalable and globally distributed database with a multi-model approach, and provides you with the ability to use document, key-value, wide-column, or graph-based data.</description>
    </item>
    
    <item>
      <title>Build fault tolerant applications with Cassandra API for Azure Cosmos DB</title>
      <link>https://abhirockzz.github.io/posts/cosmosdb-fault-tolerant-apps/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://abhirockzz.github.io/posts/cosmosdb-fault-tolerant-apps/</guid>
      <description>Azure Cosmos DB is a resource governed system that allows you to execute a certain number of operations per second based on the provisioned throughput you have configured.</description>
    </item>
    
    <item>
      <title>Build a pipeline to join streams of real time data</title>
      <link>https://abhirockzz.github.io/posts/azure-stream-analytics-tutorial/</link>
      <pubDate>Fri, 28 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://abhirockzz.github.io/posts/azure-stream-analytics-tutorial/</guid>
      <description>With traditional architectures, it&amp;rsquo;s quite hard to counter challenges imposed by real-time streaming data – one such use case is joining streams of data from disparate sources.</description>
    </item>
    
  </channel>
</rss>
